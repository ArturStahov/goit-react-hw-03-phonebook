{"version":3,"sources":["components/Section.js","components/PhoneForm/PhoneForm.js","components/ContactList/ContactList.js","components/FilterContacts/FilterContacts.js","App.js","index.js"],"names":["Section","styled","section","Title","h2","SectionBlock","title","children","Form","form","FormLabel","label","Button","button","PhoneForm","state","nameValue","numberValue","handlerInput","e","target","name","value","setState","handlerFormSubmit","preventDefault","props","onAddContact","onSubmit","this","type","onChange","required","placeholder","minLength","maxLength","Component","TaskList","ul","TaskItem","li","TaskItemElements","p","ContactList","items","onDeleteContact","map","i","number","onClick","id","FilterBlock","div","Label","Input","input","FilterContacts","OnInputFilter","event","App","contacts","nameFilter","filterContactList","filter","item","toLowerCase","includes","addContact","some","error","text","delay","isMobilePhone","contact","uniqid","prevState","createContact","deleteContact","contactsFilterInput","inputValue","localStorage","getItem","JSON","parse","setItem","stringify","visibleContacts","ReactDOM","render","document","querySelector"],"mappings":"wrBAGA,IAAMA,EAAUC,IAAOC,QAAV,KAQPC,EAAQF,IAAOG,GAAV,KAUI,SAASC,EAAT,GAA4C,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC1C,OACI,eAACP,EAAD,WACI,cAACG,EAAD,UAAQG,IACPC,K,4fCrBb,IAAMC,EAAOP,IAAOQ,KAAV,KAMJC,EAAYT,IAAOU,MAAV,KAMTC,EAASX,IAAOY,OAAV,KAUSC,E,4MAEjBC,MAAQ,CACJC,UAAW,GACXC,YAAa,I,EAGjBC,aAAe,SAACC,GAAO,IAAD,EACMA,EAAEC,OAAlBC,EADU,EACVA,KAAMC,EADI,EACJA,MAEd,EAAKC,SAAL,eACKF,EAAOC,K,EAKhBE,kBAAoB,SAAAL,GAAM,IAAD,EACc,EAAKJ,MAAhCC,EADa,EACbA,UAAWC,EADE,EACFA,YACnBE,EAAEM,iBACF,EAAKC,MAAMC,aAAaX,EAAWC,GACnC,EAAKM,SAAS,CACVP,UAAW,GACXC,YAAa,M,uDAOjB,OACI,eAACT,EAAD,CAAMoB,SAAUC,KAAKL,kBAArB,UACI,eAACd,EAAD,mBAEI,uBAAOoB,KAAK,OAAOT,KAAK,YAAYU,SAAUF,KAAKX,aAAcI,MAAOO,KAAKd,MAAMC,UAAWgB,UAAQ,OAE1G,eAACtB,EAAD,oBAEI,uBAAOoB,KAAK,OAAOT,KAAK,cAAcU,SAAUF,KAAKX,aAAcI,MAAOO,KAAKd,MAAME,YACjFgB,YAAY,mBAAmBC,UAAU,KAAKC,UAAU,KAAKH,UAAQ,OAE7E,cAACpB,EAAD,CAAQkB,KAAK,SAAb,gC,GAxCuBM,a,wwBCvBvC,IAAMC,EAAWpC,IAAOqC,GAAV,KAIRC,EAAWtC,IAAOuC,GAAV,KAWRC,EAAmBxC,IAAOyC,EAAV,KAMhB9B,EAASX,IAAOY,OAAV,KAaG,SAAS8B,EAAT,GAAkD,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,gBACzC,OAEI,cAACR,EAAD,UACKO,EAAME,KAAI,SAAAC,GAAC,OACR,eAACR,EAAD,WACI,eAACE,EAAD,WAAmBM,EAAE1B,KAArB,QACA,cAACoB,EAAD,UAAmBM,EAAEC,SACrB,cAAC,EAAD,CAAQlB,KAAK,SAASmB,QAAS,kBAAMJ,EAAgBE,EAAEG,KAAvD,sBAHWH,EAAEG,S,scCvCjC,IAAMC,EAAclD,IAAOmD,IAAV,KAIXC,EAAQpD,IAAOU,MAAV,KAMLR,EAAQF,IAAOyC,EAAV,KAKLY,EAAQrD,IAAOsD,MAAV,KAII,SAASC,EAAT,GAAmD,IAAzBlC,EAAwB,EAAxBA,MAAOmC,EAAiB,EAAjBA,cAC5C,OACI,cAACN,EAAD,UACI,eAACE,EAAD,WACI,cAAC,EAAD,oCACA,cAACC,EAAD,CAAOxB,KAAK,OAAOR,MAAOA,EAAOS,SAAU,SAAA2B,GAAK,OAAID,EAAcC,EAAMtC,OAAOE,e,wCCf1EqC,E,4MAEjB5C,MAAQ,CACJ6C,SAAU,GACVC,WAAY,I,EAkBhBC,kBAAoB,WAChB,OAAO,EAAK/C,MAAM6C,SAASG,QAAO,SAAAC,GAAI,OAClCA,EAAK3C,KAAK4C,cAAcC,SAAS,EAAKnD,MAAM8C,WAAWI,mB,EAI/DE,WAAa,SAAC9C,EAAM2B,GAEO,EAAKjC,MAAM6C,SAASQ,MAAK,SAAAJ,GAAI,OAAIA,EAAK3C,KAAK4C,cAAcC,SAAS7C,EAAK4C,kBAyBnFI,gBAAM,CACT/D,MAAO,MACPgE,KACI,yCACJC,MAAO,MAKVC,YAAcxB,GAhCG,WAClB,IAAMyB,EAAU,CACZpD,OACA2B,SACAE,GAAIwB,OAER,EAAKnD,UAAS,SAAAoD,GACV,MAAO,CACHf,SAAS,GAAD,mBAAMe,EAAUf,UAAhB,CAA0Ba,QAyBpCG,GAnBCP,gBAAM,CACT/D,MAAO,MACPgE,KACI,uEACJC,MAAO,O,EAsBnBM,cAAgB,SAAC3B,GACb,EAAK3B,UAAS,SAACoD,GACX,MAAO,CACHf,SAAUe,EAAUf,SAASG,QAAO,SAAA5C,GAAC,OAAIA,EAAE+B,KAAOA,U,EAI9D4B,oBAAsB,SAACC,GACnB,EAAKxD,SAAS,CACVsC,WAAYkB,K,kEAxEZC,aAAaC,QAAQ,iBACrBpD,KAAKN,SAAS,CACVqC,SAAUsB,KAAKC,MAAMH,aAAaC,QAAQ,qB,yCAKnCN,GACXA,EAAUf,WAAa/B,KAAKd,MAAM6C,UAClCoB,aAAaI,QAAQ,eAAgBF,KAAKG,UAAUxD,KAAKd,MAAM6C,a,+BAoE7D,IACEC,EAAehC,KAAKd,MAApB8C,WACFyB,EAAkBzD,KAAKiC,oBAC7B,OACI,qCACI,cAACzD,EAAD,CAAcC,MAAM,aAApB,SACI,cAAC,EAAD,CAAWqB,aAAcE,KAAKsC,eAElC,eAAC9D,EAAD,CAAcC,MAAM,WAApB,UACI,cAACkD,EAAD,CAAgBlC,MAAOuC,EAAYJ,cAAe5B,KAAKiD,sBACvD,cAAC,EAAD,CAAclC,MAAO0C,EAAiBzC,gBAAiBhB,KAAKgD,0B,GAhG/CzC,aCHjCmD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.630a62e1.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Section = styled.section`\r\npadding:20px 0px 20px;\r\nmax-width:600px;\r\nmargin: 0 auto;\r\ndisplay:flex;\r\nflex-wrap:wrap;\r\njustify-content:center;\r\n`\r\nconst Title = styled.h2`\r\nwidth:100%;\r\ntext-align:center;\r\nfont-size:1rem;\r\ncolor:green;\r\nfont-weight:600;\r\ntext-transform:uppercase;\r\nmargin-bottom:20px;\r\n`\r\n\r\nexport default function SectionBlock({ title, children }) {\r\n    return (\r\n        <Section>\r\n            <Title>{title}</Title>\r\n            {children}\r\n        </Section>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst Form = styled.form`\r\nmax-width:100%;\r\ndisplay:flex;\r\njustify-content:center;\r\nflex-wrap:wrap;\r\n`\r\nconst FormLabel = styled.label`\r\nwidth:85%;\r\nmargin-bottom:10px;\r\ndisplay:flex;\r\njustify-content:space-around;\r\n`\r\nconst Button = styled.button`\r\npadding:5px 10px;\r\nmax-width:250px;\r\nheight:40px;\r\nbackground-color:green;\r\nborder:none;\r\nborder-radius:0.5rem;\r\ncursor:pointer;\r\n`\r\n\r\nexport default class PhoneForm extends Component {\r\n\r\n    state = {\r\n        nameValue: '',\r\n        numberValue: ''\r\n    }\r\n\r\n    handlerInput = (e) => {\r\n        const { name, value } = e.target\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n\r\n\r\n    handlerFormSubmit = e => {\r\n        const { nameValue, numberValue } = this.state\r\n        e.preventDefault();\r\n        this.props.onAddContact(nameValue, numberValue)\r\n        this.setState({\r\n            nameValue: '',\r\n            numberValue: ''\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Form onSubmit={this.handlerFormSubmit}>\r\n                <FormLabel>\r\n                    Name:\r\n                    <input type='text' name='nameValue' onChange={this.handlerInput} value={this.state.nameValue} required />\r\n                </FormLabel>\r\n                <FormLabel>\r\n                    Phone:\r\n                    <input type='text' name='numberValue' onChange={this.handlerInput} value={this.state.numberValue}\r\n                        placeholder=\"+3(___)___-__-__\" minLength=\"13\" maxLength='13' required />\r\n                </FormLabel>\r\n                <Button type=\"submit\">Add Contact</Button>\r\n            </Form>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst TaskList = styled.ul`\r\nmax-width:700px;\r\nmargin:0 auto;\r\n`\r\nconst TaskItem = styled.li`\r\npadding:10px 10px 10px 10px;\r\nwidth:100%;\r\ndisplay:flex;\r\njustify-content:space-between;\r\nbackground-color:grey;\r\nborder:2px solid black;\r\nborder-radius:0.5rem;\r\nmargin-bottom:10px;\r\nbox-shadow: 10px 5px 5px grey;\r\n`\r\nconst TaskItemElements = styled.p`\r\n\r\n&:not(:last-child){\r\n    margin-right:10px;\r\n}\r\n`\r\nconst Button = styled.button`\r\npadding:5px 10px;\r\nmax-width:200px;\r\nheight:30px;\r\nbackground-color:goldenrod;\r\nborder:none;\r\nborder-radius:0.5rem;\r\nfont-size:0.8rem;\r\ncolor:#fff;\r\ntext-transform:uppercase;\r\ncursor:pointer;\r\n`\r\n\r\nexport default function ContactList({ items, onDeleteContact }) {\r\n    return (\r\n\r\n        <TaskList>\r\n            {items.map(i => (\r\n                <TaskItem key={i.id}>\r\n                    <TaskItemElements>{i.name} :</TaskItemElements>\r\n                    <TaskItemElements>{i.number}</TaskItemElements>\r\n                    <Button type=\"button\" onClick={() => onDeleteContact(i.id)}>Delete</Button>\r\n                </TaskItem>\r\n            ))}\r\n        </TaskList>\r\n    )\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst FilterBlock = styled.div`\r\nwidth:100%;\r\npadding-bottom:20px;\r\n`\r\nconst Label = styled.label`\r\nwidth:100%;\r\ndisplay:flex;\r\nflex-wrap:wrap;\r\njustify-content:center;\r\n`\r\nconst Title = styled.p`\r\nwidth:100%;\r\ntext-align:center;\r\nmargin-bottom:5px;\r\n`\r\nconst Input = styled.input`\r\nwidth:50%;\r\n`\r\n\r\nexport default function FilterContacts({ value, OnInputFilter }) {\r\n    return (\r\n        <FilterBlock>\r\n            <Label>\r\n                <Title>Find Contacts by name</Title>\r\n                <Input type=\"text\" value={value} onChange={event => OnInputFilter(event.target.value)} />\r\n            </Label>\r\n        </FilterBlock>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport uniqid from 'uniqid'\r\nimport SectionBlock from './components/Section'\r\nimport PhoneForm from './components/PhoneForm/PhoneForm'\r\nimport ContactsList from './components/ContactList/ContactList'\r\nimport FilterContacts from './components/FilterContacts/FilterContacts'\r\nimport { error } from \"@pnotify/core\";\r\nimport \"@pnotify/core/dist/PNotify.css\";\r\nimport \"@pnotify/core/dist/BrightTheme.css\";\r\nimport \"@pnotify/confirm/dist/PNotifyConfirm.css\";\r\nimport isMobilePhone from 'validator/es/lib/isMobilePhone';\r\n\r\nexport default class App extends Component {\r\n\r\n    state = {\r\n        contacts: [],\r\n        nameFilter: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if (localStorage.getItem('saveContacts')) {\r\n            this.setState({\r\n                contacts: JSON.parse(localStorage.getItem('saveContacts'))\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevState) {\r\n        if (prevState.contacts !== this.state.contacts) {\r\n            localStorage.setItem('saveContacts', JSON.stringify(this.state.contacts))\r\n        }\r\n    }\r\n\r\n    filterContactList = () => {\r\n        return this.state.contacts.filter(item =>\r\n            item.name.toLowerCase().includes(this.state.nameFilter.toLowerCase())\r\n        )\r\n    }\r\n\r\n    addContact = (name, number) => {\r\n\r\n        let isContactPresent = this.state.contacts.some(item => item.name.toLowerCase().includes(name.toLowerCase()))\r\n\r\n        const createContact = () => {\r\n            const contact = {\r\n                name,\r\n                number,\r\n                id: uniqid(),\r\n            }\r\n            this.setState(prevState => {\r\n                return {\r\n                    contacts: [...prevState.contacts, contact]\r\n                }\r\n            })\r\n        }\r\n\r\n        const errorBadValueNumber = () => {\r\n            return error({\r\n                title: \"Hi!\",\r\n                text:\r\n                    \"BAD value phone-number!!! You must enter phone-number correct format\",\r\n                delay: 3000,\r\n            });\r\n        }\r\n\r\n        const errorContactPresent = () => {\r\n            return error({\r\n                title: \"Hi!\",\r\n                text:\r\n                    \"This contact is present in phone-book!\",\r\n                delay: 3000,\r\n            });\r\n        }\r\n\r\n        if (!isContactPresent) {\r\n            (isMobilePhone(number))\r\n                ? createContact()\r\n                : errorBadValueNumber()\r\n        } else {\r\n            errorContactPresent();\r\n        }\r\n    }\r\n\r\n    deleteContact = (id) => {\r\n        this.setState((prevState) => {\r\n            return {\r\n                contacts: prevState.contacts.filter(e => e.id !== id)\r\n            }\r\n        })\r\n    }\r\n    contactsFilterInput = (inputValue) => {\r\n        this.setState({\r\n            nameFilter: inputValue,\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { nameFilter } = this.state\r\n        const visibleContacts = this.filterContactList();\r\n        return (\r\n            <>\r\n                <SectionBlock title=\"Phone-book\">\r\n                    <PhoneForm onAddContact={this.addContact} />\r\n                </SectionBlock>\r\n                <SectionBlock title=\"Contacts\">\r\n                    <FilterContacts value={nameFilter} OnInputFilter={this.contactsFilterInput} />\r\n                    <ContactsList items={visibleContacts} onDeleteContact={this.deleteContact} />\r\n                </SectionBlock>\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './normalize.css'\r\nimport './base.css'\r\nimport App from './App';\r\n\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'))"],"sourceRoot":""}